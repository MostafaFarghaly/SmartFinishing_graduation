{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/front_end/projects/next_js/smart-finshing/app/chat/%5BId%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport { HubConnectionBuilder, LogLevel, HubConnectionState } from \"@microsoft/signalr\";\r\nimport { useApi } from \"../../context/ApiContext\";\r\nimport axios from \"axios\";\r\nimport { useToken } from \"../../context/token_context\";\r\n\r\ntype Message = {\r\n  id: number;\r\n  requestId: number;\r\n  senderId: number;\r\n  senderName: string;\r\n  receiverId: number;\r\n  receiverName: string;\r\n  content: string;\r\n  sentAt: string;\r\n  isRead: boolean;\r\n};\r\n\r\ntype Participants = {\r\n  workerId: number;\r\n  customerId: number;\r\n};\r\n\r\nexport default function ChatPage() {\r\n  const { id } = useParams();\r\n  const requestId = id ? parseInt(id as string, 10) : null;\r\n  const { baseUrl } = useApi();\r\n  const { userData, token } = useToken();\r\n\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [participants, setParticipants] = useState<Participants | null>(null);\r\n  const [loadingParticipants, setLoadingParticipants] = useState(true);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [connection, setConnection] = useState<any>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const currentUserId = token\r\n    ? parseInt(\r\n        userData?.[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"] || \"0\"\r\n      )\r\n    : 0;\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"‚úÖ Token loaded. Current user ID:\", currentUserId);\r\n    console.log(\"üß™ Params id:\", id);\r\n    console.log(\"üß™ requestId:\", requestId);\r\n\r\n    if (!token || !id || !requestId || isNaN(requestId) || !currentUserId) {\r\n      console.warn(\"üõë Missing token, requestId, or currentUserId\");\r\n      return;\r\n    }\r\n\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const [msgRes, partRes] = await Promise.all([\r\n          axios.get(`${baseUrl}/api/Chat/request/${requestId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n          axios.get(`${baseUrl}/api/Chat/participants/${requestId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n        ]);\r\n\r\n        setMessages(msgRes.data);\r\n        setParticipants(partRes.data);\r\n        setLoadingParticipants(false);\r\n        scrollToBottom();\r\n      } catch (err) {\r\n        console.error(\"‚ùå Error fetching chat data:\", err);\r\n        setLoadingParticipants(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n\r\n    const newConn = new HubConnectionBuilder()\r\n      .withUrl(`${baseUrl}/chatHub`, {\r\n        accessTokenFactory: () => token!,\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    newConn\r\n      .start()\r\n      .then(async () => {\r\n        console.log(\"‚úÖ SignalR connected\");\r\n        setConnection(newConn);\r\n        await newConn.invoke(\"JoinRequestChat\", requestId);\r\n\r\n        newConn.on(\"ReceiveMessage\", (msg: Message) => {\r\n          setMessages((prev) => [...prev, msg]);\r\n          scrollToBottom();\r\n        });\r\n\r\n        newConn.on(\"ParticipantsUpdated\", (updated: Participants) => {\r\n          setParticipants(updated);\r\n        });\r\n\r\n        newConn.on(\"MessageRead\", (messageId: number) => {\r\n          setMessages((prev) =>\r\n            prev.map((msg) =>\r\n              msg.id === messageId ? { ...msg, isRead: true } : msg\r\n            )\r\n          );\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"‚ùå SignalR connection error:\", err);\r\n      });\r\n\r\n    return () => {\r\n      newConn.stop();\r\n    };\r\n  }, [id, requestId, token, currentUserId]);\r\n\r\n  const handleSend = async () => {\r\n    console.log(\"üß™ Debug Info\", {\r\n      newMessage,\r\n      currentUserId,\r\n      participants,\r\n      connectionState: connection?.state,\r\n    });\r\n\r\n    if (\r\n      !newMessage.trim() ||\r\n      !participants ||\r\n      !connection ||\r\n      connection.state !== HubConnectionState.Connected\r\n    ) {\r\n      console.warn(\"üõë Missing required info to send message.\");\r\n      return;\r\n    }\r\n\r\n    const receiverId =\r\n      currentUserId === participants.workerId\r\n        ? participants.customerId\r\n        : participants.workerId;\r\n\r\n    try {\r\n      await connection.invoke(\r\n        \"SendMessage\",\r\n        requestId,\r\n        currentUserId,\r\n        receiverId,\r\n        newMessage.trim()\r\n      );\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.error(\"‚ùå Error sending message:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Chat</h2>\r\n\r\n      <div className=\"h-[70vh] overflow-y-auto border rounded-lg shadow p-4 bg-gray-50\">\r\n        {messages.map((msg) => {\r\n          const isMe = msg.senderId === currentUserId;\r\n          return (\r\n            <div key={msg.id} className={`flex mb-3 ${isMe ? \"justify-end\" : \"justify-start\"}`}>\r\n              <div\r\n                className={`max-w-[75%] rounded-xl px-4 py-2 ${\r\n                  isMe\r\n                    ? \"bg-green-100 text-black rounded-br-none\"\r\n                    : \"bg-white border text-black rounded-bl-none\"\r\n                }`}\r\n              >\r\n                <p className=\"text-sm break-words\">{msg.content}</p>\r\n                <p className=\"text-xs text-gray-500 text-right mt-1\">\r\n                  {new Date(msg.sentAt).toLocaleTimeString([], {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {loadingParticipants && (\r\n        <p className=\"text-center text-gray-500 mt-3 text-sm\">üü° ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖÿ¥ÿßÿ±ŸÉŸäŸÜ...</p>\r\n      )}\r\n\r\n      <div className=\"flex items-center mt-4 border rounded-full px-3 py-2 shadow bg-white\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          className=\"flex-1 outline-none border-none\"\r\n          placeholder=\"ÿßŸÉÿ™ÿ® ÿ±ÿ≥ÿßŸÑÿ™ŸÉ...\"\r\n          disabled={loadingParticipants}\r\n        />\r\n        <button\r\n          onClick={handleSend}\r\n          className=\"ml-2 text-green-600 hover:text-green-800 disabled:opacity-50\"\r\n          disabled={\r\n            !newMessage.trim() ||\r\n            loadingParticipants ||\r\n            !participants ||\r\n            !connection ||\r\n            connection.state !== HubConnectionState.Connected\r\n          }\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 rotate-45\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M2 21l21-9L2 3v7l15 2-15 2v7z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}