{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/front_end/projects/next_js/smart-finshing/app/chat/%5BId%5D/page.tsx"],"sourcesContent":["// ✅ ChatBox.tsx - بعد التحسين الكامل\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Send, Loader, AlertCircle, Wifi, WifiOff, X, ArrowDown } from 'lucide-react';\r\nimport { HubConnectionBuilder, HubConnection, LogLevel, HttpTransportType } from '@microsoft/signalr';\r\n// import { useAuth } from '../../context/AuthContext';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\ninterface Message {\r\n  id: number;\r\n  requestId: number;\r\n  senderId: number;\r\n  senderName: string;\r\n  receiverId: number;\r\n  receiverName?: string;\r\n  content: string;\r\n  sentAt: string;\r\n  isRead: boolean;\r\n  isCurrentUser?: boolean;\r\n}\r\n\r\ninterface ChatParticipants {\r\n  requestId: number;\r\n  workerId: number;\r\n  customerId: number;\r\n  workerName?: string;\r\n  customerName?: string;\r\n}\r\n\r\ninterface ChatBoxProps {\r\n  requestId: number;\r\n  onClose?: () => void;\r\n}\r\n\r\ninterface TokenClaims {\r\n  [key: string]: any;\r\n}\r\n\r\nconst ChatBox: React.FC<ChatBoxProps> = ({ requestId, onClose }) => {\r\n  const { token, isAuthenticated } = useAuth();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [connection, setConnection] = useState<HubConnection | null>(null);\r\n  const [participants, setParticipants] = useState<ChatParticipants | null>(null);\r\n  const [currentUserId, setCurrentUserId] = useState<number | null>(null);\r\n  const [otherParticipantId, setOtherParticipantId] = useState<number | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // ✅ استخراج ID المستخدم من التوكن\r\n  useEffect(() => {\r\n    if (token) {\r\n      const decoded = jwtDecode<TokenClaims>(token);\r\n      const id = decoded['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'] || decoded.nameid || decoded.sub;\r\n      if (id) setCurrentUserId(parseInt(id));\r\n    }\r\n  }, [token]);\r\n\r\n  // ✅ جلب المشاركين\r\n  useEffect(() => {\r\n    const getParticipants = async () => {\r\n      try {\r\n        const res = await fetch(`https://projectapi-ekhpcndsdgbahqhm.canadacentral-01.azurewebsites.net/api/Chat/participants/${requestId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = await res.json();\r\n        setParticipants(data);\r\n        const otherId = currentUserId === data.workerId ? data.customerId : data.workerId;\r\n        setOtherParticipantId(otherId);\r\n      } catch (e) {\r\n        setError('Failed to fetch participants');\r\n      }\r\n    };\r\n    if (token && currentUserId) getParticipants();\r\n  }, [requestId, token, currentUserId]);\r\n\r\n  // ✅ جلب الرسائل\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await fetch(`https://projectapi-ekhpcndsdgbahqhm.canadacentral-01.azurewebsites.net/api/Chat/request/${requestId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = await res.json();\r\n        const formatted = data.map((msg: Message) => ({\r\n          ...msg,\r\n          isCurrentUser: msg.senderId === currentUserId,\r\n        }));\r\n        setMessages(formatted);\r\n      } catch (e) {\r\n        setError('Failed to fetch messages');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (token && currentUserId) getMessages();\r\n  }, [requestId, token, currentUserId]);\r\n\r\n  // ✅ إنشاء اتصال SignalR\r\n  useEffect(() => {\r\n    if (!token || !currentUserId) return;\r\n    const newConn = new HubConnectionBuilder()\r\n      .withUrl('https://projectapi-ekhpcndsdgbahqhm.canadacentral-01.azurewebsites.net/chatHub', {\r\n        accessTokenFactory: () => token,\r\n        transport: HttpTransportType.WebSockets,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    newConn.on('ReceiveMessage', (msg: Message) => {\r\n      setMessages((prev) => [...prev, { ...msg, isCurrentUser: msg.senderId === currentUserId }]);\r\n    });\r\n\r\n    newConn\r\n      .start()\r\n      .then(() => {\r\n        newConn.invoke('JoinRequestChat', requestId);\r\n        setConnection(newConn);\r\n      })\r\n      .catch((err) => setError('Connection failed'));\r\n\r\n    return () => {\r\n      newConn.stop();\r\n    };\r\n  }, [token, currentUserId]);\r\n\r\n  // ✅ إرسال رسالة\r\n  const sendMessage = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !connection || !otherParticipantId || !currentUserId) return;\r\n    try {\r\n      await connection.invoke('SendMessage', requestId, currentUserId, otherParticipantId, newMessage.trim());\r\n      setNewMessage('');\r\n    } catch (e) {\r\n      setError('Failed to send message');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  if (!isAuthenticated()) return <p>Please login</p>;\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-2xl mx-auto\">\r\n      <div className=\"border rounded p-4 h-[60vh] overflow-y-auto bg-gray-50\">\r\n        {messages.map((msg) => (\r\n          <div\r\n            key={msg.id}\r\n            className={`mb-2 flex ${msg.isCurrentUser ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div className={`p-2 rounded-lg max-w-[70%] ${msg.isCurrentUser ? 'bg-blue-500 text-white' : 'bg-white border'}`}>\r\n              <p className=\"text-sm\">{msg.content}</p>\r\n              <p className=\"text-xs text-right mt-1\">{new Date(msg.sentAt).toLocaleTimeString()}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={sendMessage} className=\"flex gap-2 mt-3\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          className=\"flex-1 border rounded px-4 py-2\"\r\n          placeholder=\"Type message...\"\r\n        />\r\n        <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n          Send\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"text-red-500 mt-2 text-sm\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}