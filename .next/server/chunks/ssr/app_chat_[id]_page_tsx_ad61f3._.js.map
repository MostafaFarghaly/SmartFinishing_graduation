{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/front_end/projects/next_js/smart-finshing/app/chat/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n  HubConnectionState,\r\n  HttpTransportType,\r\n} from \"@microsoft/signalr\";\r\nimport { useApi } from \"../../context/ApiContext\";\r\nimport { useToken } from \"../../context/token_context\";\r\nimport axios from \"axios\";\r\n\r\ntype Message = {\r\n  id: number;\r\n  requestId: number;\r\n  senderId: number;\r\n  senderName: string;\r\n  receiverId: number;\r\n  receiverName: string;\r\n  content: string;\r\n  sentAt: string;\r\n  isRead: boolean;\r\n};\r\n\r\ntype Participants = {\r\n  requestId: number;\r\n  workerId: number;\r\n  customerId: number;\r\n};\r\n\r\nexport default function ChatPage() {\r\n  const { id } = useParams();\r\n  const requestId = id ? parseInt(id as string, 10) : null;\r\n  const { baseUrl } = useApi();\r\n  const { userData, token } = useToken();\r\n\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [participants, setParticipants] = useState<Participants | null>(null);\r\n  const [loading, setLoading] = useState({\r\n    participants: true,\r\n    messages: true,\r\n    unreadCount: true\r\n  });\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [connection, setConnection] = useState<HubConnection | null>(null);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const currentUserId = token\r\n    ? parseInt(\r\n        userData?.[\r\n          \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"\r\n        ] || \"0\"\r\n      )\r\n    : 0;\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  // دالة لجلب المشاركين\r\n  const fetchParticipants = useCallback(async () => {\r\n    try {\r\n      if (!requestId || !token) return;\r\n      \r\n      const response = await axios.get<Participants>(\r\n        `${baseUrl}/api/Chat/participants/${requestId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      setParticipants(response.data);\r\n      setLoading(prev => ({ ...prev, participants: false }));\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch participants:\", error);\r\n      setLoading(prev => ({ ...prev, participants: false }));\r\n    }\r\n  }, [requestId, token, baseUrl]);\r\n\r\n  // دالة لجلب الرسائل\r\n  const fetchMessages = useCallback(async () => {\r\n    try {\r\n      if (!requestId || !token) return;\r\n      \r\n      const response = await axios.get<Message[]>(\r\n        `${baseUrl}/api/Chat/request/${requestId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      setMessages(response.data);\r\n      setLoading(prev => ({ ...prev, messages: false }));\r\n      scrollToBottom();\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch messages:\", error);\r\n      setLoading(prev => ({ ...prev, messages: false }));\r\n    }\r\n  }, [requestId, token, baseUrl, scrollToBottom]);\r\n\r\n  // دالة لتحديد الرسائل كمقروءة\r\n  const markMessagesAsRead = useCallback(async () => {\r\n    try {\r\n      if (!requestId || !token) return;\r\n      \r\n      await axios.post(\r\n        `${baseUrl}/api/Chat/mark-read/${requestId}`,\r\n        null,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      setUnreadCount(0);\r\n      setMessages(prev => prev.map(msg => ({ ...msg, isRead: true })));\r\n    } catch (error) {\r\n      console.error(\"Failed to mark messages as read:\", error);\r\n    }\r\n  }, [requestId, token, baseUrl]);\r\n\r\n  // دالة لجلب عدد الرسائل غير المقروءة\r\n  const fetchUnreadCount = useCallback(async () => {\r\n    try {\r\n      if (!token) return;\r\n      \r\n      const response = await axios.get<number>(\r\n        `${baseUrl}/api/Chat/unread-count`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      setUnreadCount(response.data);\r\n      setLoading(prev => ({ ...prev, unreadCount: false }));\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch unread count:\", error);\r\n      setLoading(prev => ({ ...prev, unreadCount: false }));\r\n    }\r\n  }, [token, baseUrl]);\r\n\r\n  // جلب البيانات الأولية\r\n  useEffect(() => {\r\n    if (!requestId || !token) return;\r\n\r\n    const loadInitialData = async () => {\r\n      await Promise.all([\r\n        fetchParticipants(),\r\n        fetchMessages(),\r\n        fetchUnreadCount()\r\n      ]);\r\n    };\r\n\r\n    loadInitialData();\r\n  }, [requestId, token, fetchParticipants, fetchMessages, fetchUnreadCount]);\r\n\r\n  // اتصال SignalR\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let newConn: HubConnection;\r\n\r\n    const connectToSignalR = async () => {\r\n      try {\r\n        if (!token || !requestId || !currentUserId) return;\r\n\r\n        newConn = new HubConnectionBuilder()\r\n          .withUrl(`${baseUrl}/chatHub`, {\r\n            accessTokenFactory: () => token,\r\n            transport: HttpTransportType.LongPolling,\r\n          })\r\n          .configureLogging(LogLevel.Information)\r\n          .withAutomaticReconnect()\r\n          .build();\r\n\r\n        newConn.on(\"ReceiveMessage\", (msg: Message) => {\r\n          if (isMounted) {\r\n            setMessages(prev => {\r\n              // استبدال الرسالة المؤقتة إذا وجدت بناءً على المحتوى والتوقيت\r\n              const existingIndex = prev.findIndex(\r\n                m => m.id === msg.id || \r\n                    (m.content === msg.content && \r\n                      Math.abs(new Date(m.sentAt).getTime() - new Date(msg.sentAt).getTime()) < 1000)\r\n              );\r\n              \r\n              if (existingIndex >= 0) {\r\n                const newMessages = [...prev];\r\n                newMessages[existingIndex] = msg;\r\n                return newMessages;\r\n              }\r\n              \r\n              return [...prev, msg];\r\n            });\r\n            \r\n            if (msg.senderId !== currentUserId) {\r\n              setUnreadCount(prev => prev + 1);\r\n            }\r\n            scrollToBottom();\r\n          }\r\n        });\r\n\r\n        newConn.on(\"ParticipantsUpdated\", (updated: Participants) => {\r\n          if (isMounted) setParticipants(updated);\r\n        });\r\n\r\n        newConn.on(\"systemmessage\", (data) => {\r\n          console.log(\"📢 System Message:\", data);\r\n        });\r\n\r\n        \r\n\r\n        newConn.onclose(() => {\r\n          if (isMounted) setConnection(null);\r\n        });\r\n\r\n        await newConn.start();\r\n        if (isMounted) {\r\n          await newConn.invoke(\"JoinRequestChat\", requestId);\r\n          setConnection(newConn);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to connect to SignalR:\", err);\r\n      }\r\n    };\r\n\r\n    connectToSignalR();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (newConn?.state === HubConnectionState.Connected) {\r\n        newConn.stop().catch(err => console.error(\"Error stopping connection:\", err));\r\n      }\r\n    };\r\n  }, [token, requestId, currentUserId, baseUrl, scrollToBottom]);\r\n\r\n  // تحديد الرسائل كمقروءة عند فتح المحادثة\r\n  useEffect(() => {\r\n    if (messages.length > 0 && unreadCount > 0) {\r\n      markMessagesAsRead();\r\n    }\r\n  }, [messages, unreadCount, markMessagesAsRead]);\r\n\r\n  const handleSend = async () => {\r\n    if (\r\n      !newMessage.trim() ||\r\n      !participants ||\r\n      !connection ||\r\n      connection.state !== HubConnectionState.Connected ||\r\n      isSending\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const receiverId =\r\n      currentUserId === participants.workerId\r\n        ? participants.customerId\r\n        : participants.workerId;\r\n\r\n    // إنشاء رسالة مؤقتة للعرض الفوري\r\n    const tempMessage: Message = {\r\n      id: Date.now(), // ID مؤقت\r\n      requestId: requestId!,\r\n      senderId: currentUserId,\r\n      senderName: userData?.name || \"You\",\r\n      receiverId: receiverId,\r\n      receiverName: receiverId === participants.workerId \r\n        ? \"Worker\" \r\n        : \"Customer\",\r\n      content: newMessage.trim(),\r\n      sentAt: new Date().toISOString(),\r\n      isRead: true\r\n    };\r\n\r\n    try {\r\n      setIsSending(true);\r\n      \r\n      // إضافة الرسالة مؤقتًا للقائمة\r\n      setMessages(prev => [...prev, tempMessage]);\r\n      setNewMessage(\"\");\r\n      scrollToBottom();\r\n\r\n      // إرسال الرسالة للخادم\r\n      await connection.invoke(\r\n        \"SendMessage\",\r\n        requestId,\r\n        receiverId,\r\n        newMessage.trim()\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error sending message:\", err);\r\n      \r\n      // إزالة الرسالة المؤقتة في حالة الفشل\r\n      setMessages(prev => prev.filter(msg => msg.id !== tempMessage.id));\r\n      alert(\"Failed to send message. Please try again.\");\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const isLoading = loading.participants || loading.messages || loading.unreadCount;\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-xl font-bold\">Chat </h2>\r\n        <div className=\"flex items-center gap-3\">\r\n          {unreadCount > 0 && (\r\n            <span className=\"bg-red-500 text-white text-xs px-2 py-1 rounded-full\">\r\n              {unreadCount} Unread\r\n            </span>\r\n          )}\r\n          <span className={`text-sm ${\r\n            connection?.state === HubConnectionState.Connected\r\n              ? 'text-green-600'\r\n              : 'text-red-600'\r\n          }`}>\r\n            {connection?.state === HubConnectionState.Connected ? 'connected' : ' disconnected '}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <p>Loading data ...</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"h-[70vh] overflow-y-auto border rounded-lg shadow p-4 bg-gray-50\">\r\n            {messages.length === 0 ? (\r\n              <div className=\"flex justify-center items-center h-full\">\r\n                <p className=\"text-gray-500\">No messages yet 😊</p>\r\n              </div>\r\n            ) : (\r\n              messages.map((msg) => {\r\n                const isMe = msg.senderId === currentUserId;\r\n                return (\r\n                  <div\r\n                    key={msg.id}\r\n                    className={`flex mb-3 ${isMe ? \"justify-end\" : \"justify-start\"}`}\r\n                  >\r\n                    <div\r\n                      className={`max-w-[75%] rounded-xl px-4 py-2 ${\r\n                        isMe\r\n                          ? \"bg-green-100 text-black rounded-br-none\"\r\n                          : \"bg-white border text-black rounded-bl-none\"\r\n                      }`}\r\n                    >\r\n                      <div className=\"font-semibold text-sm\">{msg.senderName}</div>\r\n                      <p className=\"text-sm break-words\">{msg.content}</p>\r\n                      <p className=\"text-xs text-gray-500 text-right mt-1\">\r\n                        {new Date(msg.sentAt).toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                        })}\r\n                        {!msg.isRead && isMe && (\r\n                          <span className=\"ml-1 text-blue-500\">•</span>\r\n                        )}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <div className=\"flex items-center mt-4 border rounded-full px-3 py-2 shadow bg-white\">\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              onKeyDown={handleKeyPress}\r\n              className=\"flex-1 outline-none border-none\"\r\n              placeholder=\"Type your message ...\"\r\n              disabled={!participants || !connection || connection.state !== HubConnectionState.Connected || isSending}\r\n            />\r\n            <button\r\n              onClick={handleSend}\r\n              className={`ml-2 ${isSending ? 'text-gray-400' : 'text-green-600 hover:text-green-800'} disabled:opacity-50`}\r\n              disabled={\r\n                !newMessage.trim() ||\r\n                !participants ||\r\n                !connection ||\r\n                connection.state !== HubConnectionState.Connected ||\r\n                isSending\r\n              }\r\n            >\r\n              {isSending ? (\r\n                <svg className=\"animate-spin h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n              ) : (\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 rotate-45\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M2 21l21-9L2 3v7l15 2-15 2v7z\" />\r\n                </svg>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}