{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/front_end/projects/next_js/smart-finshing/app/projects/page.tsx"],"sourcesContent":["// app/projects/page.tsx أو pages/projects/index.tsx\r\n\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { useApi } from \"../context/ApiContext\";\r\nimport { useToken } from \"../context/token_context\";\r\nimport { useLoginClient } from \"../context/regester/login_context\";\r\n\r\ntype ProjectImage = {\r\n  id: number;\r\n  imageUrl: string;\r\n};\r\n\r\ntype Project = {\r\n  id: number;\r\n  name: string;\r\n  serviceId: number;\r\n  serviceName: string;\r\n  apartmentType: string;\r\n  apartmentSize: string;\r\n  preferredStyle: string;\r\n  materialQuality: string;\r\n  minBudget: number;\r\n  maxBudget: number;\r\n  details: string;\r\n  createdDate: string;\r\n  projectImages: ProjectImage[];\r\n};\r\n\r\nexport default function AllProjectsPage() {\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { baseUrl } = useApi();\r\n  const { userData } = useToken();\r\n  const { saveData } = useLoginClient();\r\n\r\n  const userRole =\r\n    userData?.[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"] || \"\";\r\n\r\n  const userEmail =\r\n    userData?.[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"] || \"\";\r\n\r\n  const isOwnProfile =\r\n    userRole.toLowerCase() === \"customer\" &&\r\n    userEmail.toLowerCase() === saveData?.email?.toLowerCase();\r\n\r\n  useEffect(() => {\r\n    const getProjects = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const res = await fetch(`${baseUrl}/api/Projects`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error! status: ${res.status}`);\r\n        }\r\n\r\n        const data = await res.json();\r\n        setProjects(data);\r\n      } catch (err: any) {\r\n        console.error(\"Error fetching projects:\", err);\r\n        setError(err.message || \"Something went wrong.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getProjects();\r\n  }, [baseUrl]);\r\n\r\n  if (loading) return <p className=\"text-center mt-10\">Loading projects...</p>;\r\n\r\n  if (error)\r\n    return (\r\n      <p className=\"text-center mt-10 text-red-600\">\r\n        Failed to load projects: {error}\r\n      </p>\r\n    );\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      {isOwnProfile && (\r\n        <div className=\"mb-6\">\r\n          <Link href=\"/startProject\">\r\n            <button className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\">\r\n              Add New Project\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-4\">\r\n        {projects.map((project) => (\r\n          <Link href={`/projects/${project.id}`} key={project.id}>\r\n            <div className=\"flex flex-col md:flex-row items-center bg-white rounded-xl shadow-md hover:shadow-lg transition overflow-hidden\">\r\n              {project.projectImages.length > 0 && (\r\n                <Image\r\n                  src={project.projectImages[0].imageUrl}\r\n                  alt=\"Project Image\"\r\n                  width={250}\r\n                  height={200}\r\n                  className=\"object-cover w-full md:w-60 h-48 md:h-auto\"\r\n                />\r\n              )}\r\n              <div className=\"p-4 flex-1\">\r\n                <h2 className=\"text-xl font-semibold mb-2\">{project.name}</h2>\r\n                <p className=\"text-gray-600\">\r\n                  <strong>Service:</strong> {project.serviceName}\r\n                </p>\r\n                <p className=\"text-gray-600\">\r\n                  <strong>Place:</strong> {project.apartmentType}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,oDAAoD;;;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AA8Be,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,SAAM,AAAD;IACzB,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD;IAC5B,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,iBAAc,AAAD;IAElC,MAAM,WACJ,UAAU,CAAC,+DAA+D,IAAI;IAEhF,MAAM,YACJ,UAAU,CAAC,qEAAqE,IAAI;IAEtF,MAAM,eACJ,SAAS,WAAW,OAAO,cAC3B,UAAU,WAAW,OAAO,UAAU,OAAO;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,QAAQ,aAAa,OAAO,CAAC;gBAEnC,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,CAAC,EAAE;oBACjD,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,OAAO;oBAClC;gBACF;gBAEA,IAAI,CAAC,IAAI,EAAE,EAAE;oBACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,MAAM,EAAE;gBACrD;gBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,YAAY;YACd,EAAE,OAAO,KAAU;gBACjB,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,SAAS,IAAI,OAAO,IAAI;YAC1B,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAQ;IAEZ,IAAI,SAAS,qBAAO,8OAAC;QAAE,WAAU;kBAAoB;;;;;;IAErD,IAAI,OACF,qBACE,8OAAC;QAAE,WAAU;;YAAiC;YAClB;;;;;;;IAIhC,qBACE,8OAAC;QAAI,WAAU;;YACZ,8BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;8BACT,cAAA,8OAAC;wBAAO,WAAU;kCAAwE;;;;;;;;;;;;;;;;0BAOhG,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,EAAE;kCACnC,cAAA,8OAAC;4BAAI,WAAU;;gCACZ,QAAQ,aAAa,CAAC,MAAM,GAAG,mBAC9B,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAK,QAAQ,aAAa,CAAC,EAAE,CAAC,QAAQ;oCACtC,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;8CAGd,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA8B,QAAQ,IAAI;;;;;;sDACxD,8OAAC;4CAAE,WAAU;;8DACX,8OAAC;8DAAO;;;;;;gDAAiB;gDAAE,QAAQ,WAAW;;;;;;;sDAEhD,8OAAC;4CAAE,WAAU;;8DACX,8OAAC;8DAAO;;;;;;gDAAe;gDAAE,QAAQ,aAAa;;;;;;;;;;;;;;;;;;;uBAjBV,QAAQ,EAAE;;;;;;;;;;;;;;;;AA0BhE"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}